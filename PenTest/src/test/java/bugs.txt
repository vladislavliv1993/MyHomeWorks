БАГ 1
Метод writePartOfWord обнаруживает баг. Если в ручке недостаточно чернил для написания слова, то тесты не возвращают
нам часть слова. Вместо этого они не возаращают ничего.

БАГ 2
Метод CanWeWriteThisSize обнаруживает баг. Ручка пишет букву даже при отрицательном и нулевом значениях sizeLetter.

БАГ 3
Метод PensAreRed обнаруживает баг. В тесте у созданных нами ручек метод getColor всегда возвращает цвет BLUE. Даже
если мы задаем другие цвета.

БАГ 4
Метод penDoesntWrite обнаруживает баг и странно работает. В параметрах теста мы передаем 3 объекта класса Pen.
Ожидается, что все три объекта отработают штатно. На деле оказывается, что штатно отрабатывают только первые два объекта.

3 объект класса вообще не работает. Хотя согласно параметрам также не должен ничего "писать" и соответственно, возвращать
пустую строку.
Таким образом, создавая ручку с низким inkContainerValue и очень высоким параметром sizeLetter такой тест будет падать.




Заголовок: Метод getColor класса Pen возвращает не корректный цвет
Описание: При вызове метод getColor и предварительной передаче в любой из конструкторов класса Pen любого цвета вне
зависимости от переданного цвета в конструктор метод возвращает цвет Blue
Кейсы для воспроизведения:
1) Созданная ручка с цветом Красный при вызове у нее метода getColor возвращает цвет синий. Ожидался цвет красный
2) Созданная ручка с цветом Зеленый при вызове у нее метода getColor возвращает цвет синий. Ожидался цвет зеленый
3) Созданная ручка с цветом Синий при вызове у нее метода getColor возвращает цвет синий. Ожидался цвет синий
Лог теста:
org.junit.ComparisonFailure: expected:<[BLUE]> but was:<[RED]>
Expected :BLUE
Actual   :RED
Лог программы:
Ссылки на место где воспроизвелась ошибка:
Окружение где произошла ошибка (например, ОС):
Скриншоты (которые могут помочь в понимании проблемы):

